#!/bin/bash

# We need the host UID/GID to give permissions back when we're done.
# This is a bit of a hack, and possibly a large security risk, but I
# cannot find a better way to do it.
host_uid=$1
host_gid=$2
shift 2

# We take out the log name to setup logging.
log_name=$1
log_level=$2
shift 2

# Take out the order from the GATTACA script, defining what we have to do.
order=$1; shift # This gets rid of $1 containig the order.

case "$order" in
    init)
        cp "/GATTACA/src/GATTACA_default_options.yaml" "/GATTACA/target/$1"
    ;;
    gattaca)
        ## As this should only be run from the main GATTACA file, we can be sure that
        # $1 is input_file_clean and $2 is option_file_clean, both in /GATTACA/input
        # We are also sure that we need to write to /GATTACA/target
        inputfile="/GATTACA/input/${1}"
        optionfile="/GATTACA/input/${2}"

        Rscript \
            --vanilla \
            -e "source('/GATTACA/src/__init__.R')" \
            -e "source('/GATTACA/src/GATTACA.R')" \
            -e "setup_file_logging('/GATTACA/target', '${log_name}')" \
            -e "logger::log_threshold(${log_level})" \
            -e "GATTACA('${optionfile}', '${inputfile}', '/GATTACA/target')"
        ;;
    prepaffy)
        ## Again, we know the order of the iputs:
        # "$output_file_clean $logname $useAffy $removeControls"
        outputfile="/GATTACA/target/${1}"

        Rscript \
            --vanilla \
            -e "source('/GATTACA/src/__init__.R')" \
            -e "source('/GATTACA/src/toExpression/Affy_CEL_to_Expression.R')" \
            -e "setup_file_logging('/GATTACA/target', '${log_name}')" \
            -e "logger::log_threshold(${log_level})" \
            -e "affy2expression('/GATTACA/input', '${outputfile}', remove.controls = ${3})"
        ;;
    annotate)
        # "$input_file_clean $output_file_clean $chip_id $selections $logname"
        outputfile="/GATTACA/target/${2}"
        
        Rscript \
            --vanilla \
            -e "source('/GATTACA/src/__init__.R')" \
            -e "source('/GATTACA/src/annotator.R')" \
            -e "setup_file_logging('/GATTACA/target', '${log_name}')" \
            -e "logger::log_threshold(${log_level})" \
            -e "selections <- strsplit('${4}', ',')[[1]]" \
            -e "annotate_to_file(expression_data_path = '/GATTACA/input/${1}', output_path = '${outputfile}', chip_id = '${3}', selections = selections)"
        ;;
    prepagil)
        # "$output_filename" $analysis_program $grep_pattern $green_only $remove_controls $log_filename
        outputfile="/GATTACA/target/$1"
        
        Rscript \
            --vanilla \
            -e "source('/GATTACA/src/__init__.R')" \
            -e "source('/GATTACA/src/toExpression/Agilent_TXT_to_Expression.R')" \
            -e "setup_file_logging('/GATTACA/target', '${log_name}')" \
            -e "logger::log_threshold(${log_level})" \
            -e "agil2expression('/GATTACA/input/', '${outputfile}', '${2}', grep_pattern='${3}', green_only=${4}, remove_controls=${5})"
        ;;
    *)
        echo "Unrecognized order: '${order}'"
        exit 1
        ;;
esac

chown -R $host_uid:$host_gid /GATTACA/target