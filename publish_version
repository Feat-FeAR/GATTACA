#!/usr/bin/env bash

function pause(){
 read -s -n 1 -p "Press any key to continue . . ."
 echo ""
}

echo "Staging a new GATTACA release."
echo "NOTE: This assumes that you have already logged in to dockerhub with"
echo "  'docker login'"
echo "NOTE: This file expects to be run while you are in the GATTACA root"
echo "  folder."
echo "NOTE: Use CTRL+C to abort at any time."

pause

echo "Testing if you are connected to the internet..."
ping -i 1 -w 2 www.google.com &> /dev/null
if [ $? != 0 ]; then
    echo "You don't seem connected to the internet. Aborting."
    exit 1
fi

FAILED=0
echo "Testing if you have the required tools..."
if command -v git &> /dev/null; then
    echo "Found git..."
else
    echo "ERROR: Cannot find 'git'!"
    FAILED=1
fi
if command -v curl &> /dev/null; then
    echo "Found curl..."
else
    echo "ERROR: Cannot find 'curl'!"
    FAILED=1
fi
if command -v jq &> /dev/null; then
    echo "Found jq..."
else
    echo "ERROR: Cannot find 'jq'!"
    FAILED=1
fi
if command -v docker &> /dev/null; then
    echo "Found docker..."
else
    echo "ERROR: Cannot find 'jq'!"
    FAILED=1
fi

if [ $FAILED == 1 ]; then
    echo "Some tools are missing. Aborting."
    exit 1
fi

set -e

echo "Pulling from remote."
git pull

if [ $(git branch --show-current) != "main" ]; then
    echo "ERROR: Currently not on main branch. Aborting"
fi

echo "Getting latest tag..."
RELEASES_INFO=$(curl --silent https://api.github.com/repos/feat-fear/GATTACA/releases)
LATEST_TAG=$(echo $RELEASES_INFO | jq ".[0].tag_name")
echo "Latest tag is $LATEST_TAG - Enter new tag now (remember the 'v' prefix):"

read NEW_TAG

echo "New tag entered is $NEW_TAG."
pause

echo "Updating VERSION file..."
echo $NEW_TAG > ./VERSION

echo "Committing the change..."
git commit -am "Staging new release - $NEW_TAG"

LATEST_HASH=$(git rev-parse --short HEAD)
echo "Tagging current commit ($LATEST_HASH) on main branch with tag $NEW_TAG)"
git tag $NEW_TAG HEAD

echo "Done tagging. New current commit tag:"
git describe --tags HEAD
pause

echo "Pushing tag to remote..."
git push origin $NEW_TAG

echo "Building docker instances..."
NUMBER_ONLY_TAG="${NEW_TAG:1}"
docker build -t cmalabscience/gattaca:latest .
docker build -t cmalabscience/gattaca:$NUMBER_ONLY_TAG .

echo "Done building docker containers. Pushing to docker hub..."
docker push cmalabscience/gattaca:latest
docker push cmalabscience/gattaca:$NUMBER_ONLY_TAG

echo "Done publishing."
